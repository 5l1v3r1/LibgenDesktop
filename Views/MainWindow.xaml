<c:LibgenDesktopWindow x:Class="LibgenDesktop.Views.MainWindow"
                       xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                       xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                       xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
                       xmlns:const="clr-namespace:LibgenDesktop.Common"
                       xmlns:c="clr-namespace:LibgenDesktop.Views.Controls"
                       xmlns:u="clr-namespace:LibgenDesktop.Views.Utils"
                       xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                       xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                       mc:Ignorable="d"
                       Title="Libgen Desktop"
                       Width="{Binding WindowWidth, Mode=TwoWay}" Height="{Binding WindowHeight, Mode=TwoWay}"
                       Left="{Binding WindowLeft, Mode=TwoWay}" Top="{Binding WindowTop, Mode=TwoWay}"
                       WindowState="{Binding IsWindowMaximized, Mode=TwoWay, Converter={StaticResource booleanToMaximizedConverter}}"
                       ClosedCommand="{Binding WindowClosedCommand}"
                       Style="{StaticResource MainWindow}"
                       FocusManager.FocusedElement="{x:Reference searchTextBox}">
    <Window.Resources>
        <ResourceDictionary Source="Styles\MainWindowStyles.xaml" />
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <materialDesign:ColorZone Grid.Row="0" Style="{StaticResource MainMenuColorZone}">
            <Menu IsMainMenu="True" Style="{StaticResource MainManu}">
                <MenuItem Header="Файл">
                    <MenuItem Header="Новая БД..." IsEnabled="False" />
                    <MenuItem Header="Открыть БД..." IsEnabled="False" />
                    <MenuItem Header="Импорт из SQL-дампа..." IsEnabled="{Binding AllowSqlDumpImport}" Command="{Binding ImportSqlDumpCommand}" />
                    <MenuItem Header="Синхронизация..." IsEnabled="False" />
                    <MenuItem Header="Работать автономно" IsCheckable="True" IsChecked="{Binding IsInOfflineMode}" />
                    <MenuItem Header="Выход" Command="{Binding ExitCommand}" />
                </MenuItem>
            </Menu>
        </materialDesign:ColorZone>
        <TextBox Name="searchTextBox" Grid.Row="1" materialDesign:HintAssist.Hint="Поиск"
                 Text="{Binding SearchQuery, UpdateSourceTrigger=PropertyChanged}"
                 IsReadOnly="{Binding IsSearchindDisabled}"
                 ToolTipService.ToolTip="Поиск по наименованию, авторам, серии, издателю и ISBN без дефисов"
                 Style="{StaticResource SearchTextBox}">
            <TextBox.InputBindings>
                <KeyBinding Command="{Binding SearchCommand}" Key="Enter" />
            </TextBox.InputBindings>
        </TextBox>
        <DataGrid Name="bookGrid" Grid.Row="2" ItemsSource="{Binding Path=Books}" SelectedItem="{Binding SelectedBook, Mode=TwoWay}"
                  Style="{StaticResource BookDataGrid}">
            <DataGrid.Resources>
                <u:BindingProxy x:Key="dataGridViewModel" DataContext="{Binding}" />
                <Style TargetType="ScrollBar" BasedOn="{StaticResource BookDataGridScrollBar}" />
            </DataGrid.Resources>
            <DataGrid.RowStyle>
                <Style TargetType="DataGridRow" BasedOn="{StaticResource MaterialDesignDataGridRow}">
                    <Setter Property="u:DataGridExtensions.DoubleClickCommand" Value="{Binding ElementName=bookGrid, Path=DataContext.OpenBookDetailsCommand}"/>
                </Style>
            </DataGrid.RowStyle>
            <DataGrid.InputBindings>
                <KeyBinding Command="{Binding BookDataGridEnterKeyCommand}" Key="Enter" />
            </DataGrid.InputBindings>
            <DataGrid.Columns>
                <DataGridTextColumn Binding="{Binding Title}" Header="Наименование"
                                    Width="{Binding DataContext.TitleColumnWidth, Source={StaticResource dataGridViewModel}, Converter={StaticResource dataGridLengthConverter}, Mode=TwoWay}"
                                    MinWidth="{Binding Source={x:Static const:Constants.TITLE_COLUMN_MIN_WIDTH}}"
                                    ElementStyle="{StaticResource TitleColumnStyle}" />
                <DataGridTextColumn Binding="{Binding Authors}" Header="Авторы"
                                    Width="{Binding DataContext.AuthorsColumnWidth, Source={StaticResource dataGridViewModel}, Converter={StaticResource dataGridLengthConverter}, Mode=TwoWay}"
                                    MinWidth="{Binding Source={x:Static const:Constants.AUTHORS_COLUMN_MIN_WIDTH}}"
                                    ElementStyle="{StaticResource AuthorsColumnStyle}" />
                <DataGridTextColumn Binding="{Binding Series}" Header="Серия"
                                    Width="{Binding DataContext.SeriesColumnWidth, Source={StaticResource dataGridViewModel}, Converter={StaticResource dataGridLengthConverter}, Mode=TwoWay}"
                                    MinWidth="{Binding Source={x:Static const:Constants.SERIES_COLUMN_MIN_WIDTH}}"
                                    ElementStyle="{StaticResource SeriesColumnStyle}" />
                <DataGridTextColumn Binding="{Binding Year}" Header="Год"
                                    Width="{Binding DataContext.YearColumnWidth, Source={StaticResource dataGridViewModel}, Converter={StaticResource dataGridLengthConverter}, Mode=TwoWay}"
                                    MinWidth="{Binding Source={x:Static const:Constants.YEAR_COLUMN_MIN_WIDTH}}"
                                    ElementStyle="{StaticResource YearColumnStyle}" />
                <DataGridTextColumn Binding="{Binding Publisher}" Header="Издатель"
                                    Width="{Binding DataContext.PublisherColumnWidth, Source={StaticResource dataGridViewModel}, Converter={StaticResource dataGridLengthConverter}, Mode=TwoWay}"
                                    MinWidth="{Binding Source={x:Static const:Constants.PUBLISHER_COLUMN_MIN_WIDTH}}"
                                    ElementStyle="{StaticResource PublisherColumnStyle}" />
                <DataGridTextColumn Binding="{Binding Format}" Header="Формат"
                                    Width="{Binding DataContext.FormatColumnWidth, Source={StaticResource dataGridViewModel}, Converter={StaticResource dataGridLengthConverter}, Mode=TwoWay}"
                                    MinWidth="{Binding Source={x:Static const:Constants.FORMAT_COLUMN_MIN_WIDTH}}"
                                    ElementStyle="{StaticResource FormatColumnStyle}" />
                <DataGridTextColumn Binding="{Binding FileSizeString}" Header="Размер файла"
                                    Width="{Binding DataContext.FileSizeColumnWidth, Source={StaticResource dataGridViewModel}, Converter={StaticResource dataGridLengthConverter}, Mode=TwoWay}"
                                    MinWidth="{Binding Source={x:Static const:Constants.FILESIZE_COLUMN_MIN_WIDTH}}"
                                    ElementStyle="{StaticResource FileSizeColumnStyle}" />
                <DataGridTemplateColumn Header="OCR"
                                        Width="{Binding DataContext.OcrColumnWidth, Source={StaticResource dataGridViewModel}, Converter={StaticResource dataGridLengthConverter}, Mode=TwoWay}">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <ContentControl Name="tickMarkContainer" Content="{StaticResource tickMark}" Visibility="Hidden" />
                            <DataTemplate.Triggers>
                                <DataTrigger Binding="{Binding Ocr}" Value="True">
                                        <Setter TargetName="tickMarkContainer" Property="Visibility" Value="Visible" />
                                </DataTrigger>
                            </DataTemplate.Triggers>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
        </DataGrid>
        <ProgressBar Grid.Row="3" Minimum="0" Maximum="1" Value="{Binding ProgressValue}"
                     Visibility="{Binding IsProgressVisible, Converter={StaticResource booleanToHiddenConverter}}"
                     IsIndeterminate="{Binding IsProgressIndeterminate}"
                     Style="{StaticResource OperationProgressBar}" />
        <Grid Grid.Row="4" Style="{StaticResource StatusBarPanel}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <TextBlock Grid.Column="0" Text="{Binding StatusText}" />
            <TextBlock Grid.Column="2" Text="Автономный режим">
                <TextBlock.Style>
                    <Style TargetType="TextBlock">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsInOfflineMode}" Value="False">
                                <Setter Property="Visibility" Value="Collapsed" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>
        </Grid>
    </Grid>
</c:LibgenDesktopWindow>
